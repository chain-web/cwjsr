[package]
name = "cwjsr"
version = "0.1.3"
authors = ["“scc” <66scc66@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
boa_engine = { path = "./sk-boa/boa_engine", features = ["console"] }
boa_gc = { path = "./sk-boa/boa_gc", version = "0.14.0" }
gc = "0.4.1"
wasm-bindgen = {version = "0.2.80", features = ["serde-serialize"] }
getrandom = { version = "0.2.5", features = ["js"] }
wasm-bindgen-test = "0.3.29"
js-sys = "0.3.57"
wasm-bindgen-futures = "0.4.29"

serde-wasm-bindgen = "0.4.3"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dependencies.web-sys]
version = "0.3.57"
features = [
  'Window',
  'TextDecoder'
]

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
